//VARIÁVEIS GLOBAL:
let mPI = 3.14159;
let anglo = 0;
let angloMIN = mPI / 6;
let angloMAX = mPI / 3;
let Som;
let interpolação = 0.05;
const groundColor = "darkgreen";
const groundColor2 = "gray";
let paisagem; 

//VARIÁVEIS VENTO:
let Controle_Vento = 0;
let vento = 0;
let forca_vento = 0.3;

 
//VARIÁVEIS CHUVA:
let gotas = [];
let quantidade = 400;
let fimDaChuva = false;
let esp;
let vel;

//VARIÁVEIS ARVORE:
let tamMIM = 150;
let tamMAX = 80;
let retração = true;
let Comp_tronco;
let tam;
let especura;

 //VARIÁVEIS SOL:
let alturaSol;
let tempoParaSol = 1000;



//VARIÁVEIS PÁSSARO:
let passaroTocou = false;
let SomPassaro;

//================Fim das Variáveis=======================================

//Carrega as mídias para som da chuva e dos pássaros.

function desenharPassaro(x, y, escala = 1) {
  push();
  translate(x, y);
  scale(escala);

  // Corpo
  fill(255, 0, 0); // Vermelho
  ellipse(0, 0, 40, 25); // corpo
  ellipse(-15, -10, 20, 15); // cabeça

  // Asa
  fill(120, 80, 40);
  ellipse(5, 0, 25, 15); // asa

  // Bico
  fill(255, 204, 0);
  triangle(-20, -10, -35, -5, -25, -2);

 // Rabo (três penas em triângulo)
  fill(255, 0, 0);
  triangle(30, -5, 45, 0, 20, 5);       
  triangle(28, -7, 42, -5, 20, -2);     
  triangle(28, 7, 42, 5, 20, 2);       

  
  // Olho
  fill(0);
  ellipse(-18, -12, 3, 3);

  pop();
}

function preload() {
  som_Chuva = loadSound('chuva.mp3');
  SomPassaro = loadSound('passaros.mp3');
}

function setup() {
  createCanvas(windowWidth, windowHeight);
  
  //Cria um array para a gotas de chuva.
  for (let i = 0; i < quantidade; i++) {
    gotas[i] = [random(width), random(height), random(1, 5)];
  }
  alturaSol = height + 200; 
}

function draw() {
  

  // Transição do fundo: escuro → claro
  if (!fimDaChuva) {
    background(0, 100);
  } else {
    paisagem = map(alturaSol, height + 100, height / 2, 0, 255);
    background(135, 206, 250, constrain(paisagem, 100, 255));
  }

  // Controle do tempo para iniciar a transição solar
  if (frameCount > tempoParaSol && !fimDaChuva) {
    fimDaChuva = true;
    retração = false;
    if (som_Chuva && som_Chuva.isPlaying()) {
      som_Chuva.setVolume(0, 1);  
    }
  }

  // Controle do crescimento/retração da árvore
  if (retração && interpolação > 0) {
    interpolação -= 0.01;
  } else if (!retração && interpolação < 1) {
    
    //Controlo a velocidade do crescimento da arvores apos a chuva
   interpolação += 0.001; // Expansão suave
  }

  // Vento na árvore durante a chuva
   vento = (!fimDaChuva) ? sin(Controle_Vento * 2) * forca_vento * 0.3: 0;
  // Interpolação Linear 
  
  //Maior o valor multiplicado ao vento, maior o movimento da arvore
  anglo = lerp(angloMIN, angloMAX, interpolação) + vento;
  
  //Maior o valor somado ao controle do vento, mais forte a arvores é soprada
  if (!fimDaChuva) Controle_Vento += 0.029;

   //A medida a arvores cresce, o tronco fica mais fino.
  // Interpolação Linear 
     Comp_tronco = lerp(tamMAX, tamMIM, interpolação);
 
  // Desenha e atualiza as gotas de chuva (se ainda estiver chovendo)
  if (!fimDaChuva) {
    for (let i = 0; i < quantidade; i++) {
      gotas[i][0] += Controle_Vento * 0.7;
        esp = map(gotas[i][2], 0, 8, 0.5, 0.6);
      strokeWeight(esp);
      stroke(255);
        tam = map(gotas[i][2], 1, 5, 4, 12);
      line(gotas[i][0], gotas[i][1], gotas[i][0], gotas[i][1] + tam * 0.3);

      vel = map(gotas[i][2], 1, 5, 3, 10);
      gotas[i][1] += vel;

      if (gotas[i][1] > height) {
        gotas[i][0] = random(width);
        gotas[i][1] = 0;
      } else if (gotas[i][0] > width) {
        gotas[i][0] = random(height);
        gotas[i][0] = 0;
      }
    }
  }

  // Desenha o sol subindo no céu após a chuva
  if (fimDaChuva) {
    noStroke();
    fill(255, 204, 0);
    
    //Controla a altura que o sol vai na tela
    alturaSol = max(height / 5, alturaSol -1); 
    
    //Desenha o sol e posiciona á direita da tela e define o tamalho.
    ellipse(width - 200, alturaSol, 100, 100);  
    
    //Define o início do som de pássaros.
     if (!passaroTocou && alturaSol <= height) {
    if (SomPassaro && !SomPassaro.isPlaying()) {
      SomPassaro.play();
      passaroTocou = true;
    }
   }
  }
  // Desenha a árvore a partir do centro inferior da tela
  push();
  translate(width /2, height);
  Arvore(Comp_tronco);
  pop();
   
//Controla o chão quando está noite e quando está dia.  
if(!fimDaChuva){
    fill(groundColor2);
     rect(0, 800, width, 50);
}
  else{
    fill(groundColor);
     rect(0, 800, width, 50);
}
  

//Função que cria a árvore
function Arvore(tam) {
  
  //Controla a expessura do tronco. 
    especura = map(tam, 5, tamMIM, 0.5,20);
  strokeWeight(especura);
 //Controla a Core dos troncos
  if (tam <= 5) { //Se o tamanho é menor que 5 pixels
    stroke(205, 0, 132); //pinta de  Rosa
  } else if (tam <= 10) { // Se o tamnho for menor que 10 pixes
    stroke(0, 255, 0);//pinta de verde
  } else { // Para os demais tamanhos
    stroke(66, 38, 0);//pinta de Marrom para representar os caules.
  }
  //Controlo o tamanho da arvores
  line(0, 0, 0, -tam * 1.8);
  translate(0, -tam * 1.8 );
//Controlo o tamanho dos ramos e quando os ramos irão se formar.
  if (tam > 5) {
    push();
    rotate(anglo);
    Arvore(tam * 0.60);
    pop();
    
    push();
    rotate(anglo*0.2);
    Arvore(tam * 0.60);
    pop();
    
    
//Faz com que a árvore fique diferente durante a chuva    
if(!fimDaChuva){
    push();
    rotate(anglo*0.5);
    Arvore(tam * 0.69);
    pop();
}
  else{
    push();
    rotate(-anglo);
    Arvore(tam * 0.67);
    pop();
     }
   }
  }
  
  if (fimDaChuva && alturaSol <= height / 1.5) {
  let posicaoX = width / 2 + 40;  // Ajuste para coincidir com a copa
  let posicaoY = height - Comp_tronco * 1.8 - 300;
  desenharPassaro(posicaoX, posicaoY, 1);
}

 }
function mousePressed() {
  if (som_Chuva && !som_Chuva.isPlaying()) {
    som_Chuva.loop();
    som_Chuva.setVolume(1);
  }
  if (SomPassaro && SomPassaro.isLoaded() && getAudioContext().state !== 'running') {
    userStartAudio();  // Libera o áudio no navegador
  }
}
